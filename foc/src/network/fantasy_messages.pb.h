// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fantasy_messages.proto

#ifndef PROTOBUF_fantasy_5fmessages_2eproto__INCLUDED
#define PROTOBUF_fantasy_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace pixelatedgames {
namespace fos {
namespace protobufs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fantasy_5fmessages_2eproto();
void protobuf_AssignDesc_fantasy_5fmessages_2eproto();
void protobuf_ShutdownFile_fantasy_5fmessages_2eproto();

class fantasy_message;
class login;

enum fantasy_message_type {
  LOGIN = 1,
  POSITION = 2
};
bool fantasy_message_type_IsValid(int value);
const fantasy_message_type fantasy_message_type_MIN = LOGIN;
const fantasy_message_type fantasy_message_type_MAX = POSITION;
const int fantasy_message_type_ARRAYSIZE = fantasy_message_type_MAX + 1;

// ===================================================================

class fantasy_message : public ::google::protobuf::MessageLite {
 public:
  fantasy_message();
  virtual ~fantasy_message();
  
  fantasy_message(const fantasy_message& from);
  
  inline fantasy_message& operator=(const fantasy_message& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const fantasy_message& default_instance();
  
  void Swap(fantasy_message* other);
  
  // implements Message ----------------------------------------------
  
  fantasy_message* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const fantasy_message& from);
  void MergeFrom(const fantasy_message& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .com.pixelatedgames.fos.protobufs.fantasy_message_type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline com::pixelatedgames::fos::protobufs::fantasy_message_type type() const;
  inline void set_type(com::pixelatedgames::fos::protobufs::fantasy_message_type value);
  
  // optional .com.pixelatedgames.fos.protobufs.login _login = 2;
  inline bool has__login() const;
  inline void clear__login();
  static const int kLoginFieldNumber = 2;
  inline const ::com::pixelatedgames::fos::protobufs::login& _login() const;
  inline ::com::pixelatedgames::fos::protobufs::login* mutable__login();
  inline ::com::pixelatedgames::fos::protobufs::login* release__login();
  
  // @@protoc_insertion_point(class_scope:com.pixelatedgames.fos.protobufs.fantasy_message)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has__login();
  inline void clear_has__login();
  
  ::com::pixelatedgames::fos::protobufs::login* _login_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_fantasy_5fmessages_2eproto();
  friend void protobuf_AssignDesc_fantasy_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_fantasy_5fmessages_2eproto();
  
  void InitAsDefaultInstance();
  static fantasy_message* default_instance_;
};
// -------------------------------------------------------------------

class login : public ::google::protobuf::MessageLite {
 public:
  login();
  virtual ~login();
  
  login(const login& from);
  
  inline login& operator=(const login& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const login& default_instance();
  
  void Swap(login* other);
  
  // implements Message ----------------------------------------------
  
  login* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const login& from);
  void MergeFrom(const login& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 authentication = 2;
  inline bool has_authentication() const;
  inline void clear_authentication();
  static const int kAuthenticationFieldNumber = 2;
  inline ::google::protobuf::int64 authentication() const;
  inline void set_authentication(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.pixelatedgames.fos.protobufs.login)
 private:
  inline void set_has_authentication();
  inline void clear_has_authentication();
  
  ::google::protobuf::int64 authentication_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fantasy_5fmessages_2eproto();
  friend void protobuf_AssignDesc_fantasy_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_fantasy_5fmessages_2eproto();
  
  void InitAsDefaultInstance();
  static login* default_instance_;
};
// ===================================================================


// ===================================================================

// fantasy_message

// required .com.pixelatedgames.fos.protobufs.fantasy_message_type type = 1;
inline bool fantasy_message::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fantasy_message::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fantasy_message::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fantasy_message::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline com::pixelatedgames::fos::protobufs::fantasy_message_type fantasy_message::type() const {
  return static_cast< com::pixelatedgames::fos::protobufs::fantasy_message_type >(type_);
}
inline void fantasy_message::set_type(com::pixelatedgames::fos::protobufs::fantasy_message_type value) {
  GOOGLE_DCHECK(com::pixelatedgames::fos::protobufs::fantasy_message_type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .com.pixelatedgames.fos.protobufs.login _login = 2;
inline bool fantasy_message::has__login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fantasy_message::set_has__login() {
  _has_bits_[0] |= 0x00000002u;
}
inline void fantasy_message::clear_has__login() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void fantasy_message::clear__login() {
  if (_login_ != NULL) _login_->::com::pixelatedgames::fos::protobufs::login::Clear();
  clear_has__login();
}
inline const ::com::pixelatedgames::fos::protobufs::login& fantasy_message::_login() const {
  return _login_ != NULL ? *_login_ : *default_instance_->_login_;
}
inline ::com::pixelatedgames::fos::protobufs::login* fantasy_message::mutable__login() {
  set_has__login();
  if (_login_ == NULL) _login_ = new ::com::pixelatedgames::fos::protobufs::login;
  return _login_;
}
inline ::com::pixelatedgames::fos::protobufs::login* fantasy_message::release__login() {
  clear_has__login();
  ::com::pixelatedgames::fos::protobufs::login* temp = _login_;
  _login_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// login

// required int64 authentication = 2;
inline bool login::has_authentication() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login::set_has_authentication() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login::clear_has_authentication() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login::clear_authentication() {
  authentication_ = GOOGLE_LONGLONG(0);
  clear_has_authentication();
}
inline ::google::protobuf::int64 login::authentication() const {
  return authentication_;
}
inline void login::set_authentication(::google::protobuf::int64 value) {
  set_has_authentication();
  authentication_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobufs
}  // namespace fos
}  // namespace pixelatedgames
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fantasy_5fmessages_2eproto__INCLUDED
